version: '3.8'

include:
  - ./tools/kafka-dev/docker-compose.yml
  - ./tools/clickhouse-dev/docker-compose.yml

services:
  # Databases:
  postgresql:
    container_name: "social-network-postgresql"
    image: postgres:15.5
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_MULTIPLE_DATABASES: gateway, posts
    ports:
      - "5432:5432"
    networks:
      - social-network-network
    volumes:
      - ./tools/database-dev/configs/create-multiple-db-with-users.sh:/docker-entrypoint-initdb.d/create-multiple-db-with-users.sh:ro
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U postgres"
      interval: 10s
      timeout: 5s
      retries: 5
      
  pgadmin:
    container_name: "social-network-pgadmin"
    image: dpage/pgadmin4
    restart: unless-stopped
    entrypoint: >
      /bin/sh -c "
      cp -f /pgadmin4/pgpass /var/lib/pgadmin/;
      chmod 600 /var/lib/pgadmin/pgpass;
      /entrypoint.sh
      "
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "8080:80"
    networks:
      - social-network-network
    volumes:
      - ./tools/database-dev/configs/servers.json:/pgadmin4/servers.json:ro
      - ./tools/database-dev/configs/pgpass:/pgadmin4/pgpass:ro

  # Migrations:
  liquibase-gateway:
    image: liquibase/liquibase:4.19.0
    container_name: liquibase-gateway
    networks:
      - social-network-network
    volumes:
      - ./gateway/migrations:/app
    command: --log-level ERROR  --defaultsFile=/app/dev.properties update
    depends_on:
      - pgadmin
      - postgresql

  liquibase-posts:
    image: liquibase/liquibase:4.19.0
    container_name: liquibase-posts
    networks:
      - social-network-network
    volumes:
      - ./posts/migrations:/app
    command: --log-level ERROR  --defaultsFile=/app/dev.properties update
    depends_on:
      - pgadmin
      - postgresql

  # Service Gateway
  gateway:
    build:
      context: .
      dockerfile: ./gateway/src/Dockerfile
    container_name: social-network-gateway
    networks:
      - social-network-network
    ports:
      - "80:80"
    depends_on:
      - liquibase-gateway
  
  # Service Posts
  posts:
    build:
      context: ./posts/src
    container_name: posts
    networks:
      - social-network-network
    ports:
      - "50052:50052"
    depends_on:
      - liquibase-posts

  # Service Statistics
  statistics:
    build:
      context: ./statistics/src/
    container_name: statistics
    networks:
      - social-network-network
    ports:
      - "1329:1329"
  
networks:
  social-network-network:
    name: "social-network-network"
  
volumes:
  db_data: